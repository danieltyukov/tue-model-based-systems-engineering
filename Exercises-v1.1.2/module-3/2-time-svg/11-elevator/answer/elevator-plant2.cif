import "elevator-manual-control.cif";

// Sensors
alg bool s_req_up1    = s_button_up1.on;
alg bool s_req_up2    = s_button_up2.on;
alg bool s_req_down2  = s_button_down2.on;
alg bool s_req_down3  = s_button_down3.on;
alg bool s_req_floor1 = s_button_floor1.on;
alg bool s_req_floor2 = s_button_floor2.on;
alg bool s_req_floor3 = s_button_floor3.on;

alg bool s_doors_closed = 0.95 <= x_d;

alg bool s_floor1 = y <= 1.01;
alg bool s_floor2 = 1.99 <= y and y <= 2.01;
alg bool s_floor3 = 2.99 <= y;

// Definition of the sensors that can be activated by the user
uncontrollable u_up1, u_up2, u_down2, u_down3, u_floor1, u_floor2, u_floor3;

s_button_up1:    S_Button(u_up1);
s_button_up2:    S_Button(u_up2);
s_button_down2:  S_Button(u_down2);
s_button_down3:  S_Button(u_down3);
s_button_floor1: S_Button(u_floor1);
s_button_floor2: S_Button(u_floor2);
s_button_floor3: S_Button(u_floor3);

// Sensor buttons that can be clicked in the SVG visualization
automaton def S_Button(uncontrollable u_press):
    event release;

    cont t der 1;

    location off:
        initial;
        edge u_press  do t := 0     goto on;

    location on:
         edge release when 0.5 <= t goto off;   // activate for 0.5 time units
end


// Elevator behavior
const real vmax = 0.3;  // floors per second
const real ymin = 1;     // lowest floor
const real ymax = 3;     // highest floor

cont y = ymin;          // vertical lift position, initially at floor 1

// Elevator vertical velocity
alg real v = if       a_lift_up and not a_lift_down:  vmax
             elif not a_lift_up and     a_lift_down: -vmax
             else                                     0
             end;

equation y' = if ymax <= y:
                    if a_lift_down: v // If the elevator is at the top
                    else            0 // floor it can only move down
                    end
              elif ymin < y: v // If it is between the top and bottom it can move
                               // in either direction
              else
                    if a_lift_up: v // If it is at the bottom floor it can
                    else          0 // only move up
                    end
              end;

// DOORS

cont x_d = 1.0; // door position ranging from 0(open) to 1(closed)

const real vmax_d = 1.0;

equation x_d' = if a_close_doors:
                    if x_d < 1.0: vmax_d // x_d increases until it reaches 1
                    else          0
                    end
                else                     // not a_close_doors
                    if 0 < x_d: -vmax_d  // x_d decreases until it reaches 0
                    else         0
                    end
                end;
