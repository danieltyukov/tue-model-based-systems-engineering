alg bool s_window_closed = window.s_window_closed;
alg bool a_heater = controller.a_heater;
uncontrollable u_window;
automaton controller:
  alg bool a_heater = on;
  cont t der -1.0;
  event turn_off;
  event to_turn_on_wait;
  event turn_on;
  location on:
    initial;
    edge turn_off when not s_window_closed goto off;
  location off:
    edge to_turn_on_wait when s_window_closed do t := 2.0 goto turn_on_wait;
  location turn_on_wait:
    edge turn_on when t <= 0 goto on;
end
automaton window:
  event open;
  event close;
  alg bool s_window_closed = y >= Y_CLOSED - 5.0;
  const real Y_OPENED = -60.0;
  const real Y_CLOSED = 0.0;
  const real V_WINDOW = 20.0;
  cont y = Y_CLOSED;
  location closed:
    initial;
    equation y' = 0.0;
    edge u_window goto opening;
  location opening:
    equation y' = -V_WINDOW;
    edge open when y <= Y_OPENED goto opened;
    edge u_window goto closing;
  location closing:
    equation y' = V_WINDOW;
    edge close when y >= Y_CLOSED goto closed;
    edge u_window goto opening;
  location opened:
    equation y' = 0.0;
    edge u_window goto closing;
end
svgin id "window" event u_window file "hw.svg";
svgout id "s_window" attr "fill" value if s_window_closed: "green" else "red" end file "hw.svg";
svgout id "a_heater" attr "fill" value if a_heater: "green" else "red" end file "hw.svg";
svgout id "heater_plate" attr "fill" value if a_heater: "orange" else "#fff6d5" end file "hw.svg";
svgout id "window" attr "transform" value fmt("translate(0,%s)", window.y) file "hw.svg";
