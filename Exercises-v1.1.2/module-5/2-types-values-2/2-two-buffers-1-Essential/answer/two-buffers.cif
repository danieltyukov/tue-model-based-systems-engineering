type product = tuple(int nr; real weight; string color);

//This channel sends products
event product gen_b1, gen_b2;

automaton generator:
    disc list product prods = [(1, 2.5, "red"), (2, 15, "blue"), (3, 0.8, "grey")];

    location:
        initial;
        edge gen_b1 ! prods[0]
            when size(prods) >= 1 and size(buffer1.prods) <= size(buffer2.prods)
            do prods := prods[1:];
        edge gen_b2 ! prods[0]
            when size(prods) >= 1 and size(buffer1.prods) >  size(buffer2.prods)
            do prods := prods[1:];
end

automaton buffer1:
    disc list product prods = [];

    location:
        initial;
        edge gen_b1 ? do prods := prods + [?];
end

automaton buffer2:
    disc list tuple(int nr; string color) prods = [];

    location:
        initial;
        // Receive new product,
        // construct a new tuple consisting of nr and color of the received product,
        // and put the new tuple at the end of the list prods.
        edge gen_b2 ? do prods := prods + [ ( ?[nr], ?[color] ) ];
end
