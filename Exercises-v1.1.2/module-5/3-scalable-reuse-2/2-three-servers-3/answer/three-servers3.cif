event void s1_q2, s1_q3, q2_s2, q3_s3;

automaton S1:
    event _in;

    location receive:
        initial;
        edge _in    when Q2.n + Q3.n <= 4   goto send;

    location send:
        edge s1_q2! when Q2.n <= Q3.n       goto receive;
        edge s1_q3! when Q3.n <= Q2.n       goto receive;
end

automaton def Q(event void rcv?, snd!):
    disc int n = 0;

    location:
        initial;
        edge rcv?              do n := n + 1;
        edge snd!  when n > 0  do n := n - 1;
end

automaton def S(event void rcv?):
    event out;

    location receive:
        initial;
        edge rcv?  goto send;

    location send:
        edge out   goto receive;
end

Q2: Q(s1_q2, q2_s2);
Q3: Q(s1_q3, q3_s3);

S2: S(q2_s2);
S3: S(q3_s3);
